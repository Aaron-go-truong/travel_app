/ = javascript_pack_tag 'users/user_show'

section.h-100.gradient-custom-2
  .container.h-100.d-flex.align-items-start.justify-content-center
    .container-profile.w-100
      .img-bg.w-100
        = image_pack_tag 'bg.jpg', class: 'rounded-bottom h-100 w-100'
      .under-content.d-flex.px-4.align-items-end.justify-content-between
        .d-flex.align-items-end.justify-content-center.gap-2
          .img-avt
            = image_tag url_for(@user.avatar), class: "h-100 w-100 rounded-circle", style: "border: 2px solid  #1f618d"
          .ml-4
            h3
              span
                | #{@user.user_name}
            span.text-muted.text-small--bold
              | #{@user.followers.count} followers â€¢ #{@user.following.count} following
            .d-flex.align-items-center
              - @user.followers.each do |follower|
                .img-icon.mt-2
                  = image_tag url_for(follower.avatar), class: "h-100 w-100 rounded-circle"
        .d-flex.gap-2
          .follow[data-controller="follow"]
            button.btn.btn-sm.flex-grow-1[id = @user.id type="button" class="#{ current_user.following?(@user) ? 'btn-secondary' : 'btn-primary'}" data-follow-target="flbutton" data-action="click->follow#follow_action"]
              - if current_user.following?(@user)
                | Unfollow
              - else
                | Follow
          .show-recommend[data-controller="user"]
            button.btn.btn-sm[style="background: #e4e6eb" data-action="click->user#showSlider"]
              i.fa-solid.fa-chevron-down
              i.fa-solid.fa-chevron-up.d-none
      #recommend.card.mt-3.mb-3.w-100.d-none[data-controller="user"]
        .d-flex.justify-content-start.align-items-center
          span
            | People You May Know
        .slide.position-relative.w-full.mt-2
          .carousel-container
            .inner-carousel
              .track
                - @users.each do |user|
                  -if user.id != current_user.id
                    .card-container
                      .card.p-0
                        => link_to "/users/#{user.id}" do
                          .img-card
                            = image_tag user.avatar, class: "h-100 w-100"
                        .card-body
                          h5.card-title
                            span
                              | #{user.user_name}
                          .follow[data-controller="follow"]
                            button.btn.btn-sm.flex-grow-1[id = user.id type="button" class="#{ current_user.following?(user) ? 'btn-secondary' : 'btn-primary'}" data-follow-target="flbutton" data-action="click->follow#follow_action"]
                              - if current_user.following?(user)
                                | Unfollow
                              - else
                                | Follow
          .prev.position-absolute.d-none[data-action="click->user#prevAction"]
            i.fa-solid.fa-chevron-left.fa-lg
          .next.position-absolute[data-action="click->user#nextAction"]
            i.fa-solid.fa-chevron-right.fa-lg
      .explore.mt-4.w-100[data-controller="plan"]
        = hidden_field_tag "page", value: "userProfile"
        = hidden_field_tag "user_id", value: @user.id
        .d-flex.align-items-center.w-100.gap-3
          .inputs[style="width: 55%"]
            i.fa.fa-search[data-action="click->plan#filterAction" ]
            input#search.form-control[type="text" placeholder="Search Plans..." data-action="keydown->plan#search_input"]
          .d-flex.align-items-end.gap-2
            .sort
              span.text-small.text-muted
                | Sort by
              select#select-sort.form-select.form-select-sm[aria-label=".form-select-sm example" data-action="change->plan#filterAction"]
                option[value="most_recent" selected]
                  | Most Recent
                option[value="oldest"]
                  | Oldest
                option[value="most_like"]
                  | Most Like
            .status-select[class="#{params[:page] == "myPlans" ? '' : 'd-none'}"]
              span.text-small.text-muted
                | Status
              select#select-status.form-select.form-select-sm[aria-label=".form-select-sm example" data-action="change->plan#filterAction"]
                option[value="all" selected]
                  | All
                option[value="0"]
                  | Public
                option[value="1"]
                  | Followers
                option[value="2"]
                  | Only
            .text-muted.text-small.btn-clear.py-1.px-2.d-none[data-action="click->plan#clearFilterAction"]
              .d-flex.align-items-center.gap-1
                i.fa-solid.fa-xmark
                span
                  | Clear filters
        #plans_list.row.row-cols-3.w-100.g-2.mt-3
          - Plan.where(user_id: @user.id).each do |plan|
            .col.mb-2[data-controller="plan" type="button"]
              .position-relative.g-2.card-plan.rounded-3
                => link_to plan_path(plan) do
                  = image_tag url_for(plan.image_description), class: "w-100 card-height rounded-3 position-relative", id: plan.id.to_s, data: { plan_target: 'plancard'}
                .position-absolute.bottom-0.title-plan.rounded-bottom-3
                .position-absolute.bottom-0.p-2.w-100
                  .d-flex.justify-content-between.align-items-center.w-100
                    span.text-title--bold
                      | #{plan.title}
                    i.fa-solid.fa-heart[id= "like_#{plan.id}" data-plan-target="likebtn" data-action="click->plan#like_action" class="#{ plan.likes.where(user_id:current_user.id).blank? ? 'heart' : 'heart--active'}" ]
